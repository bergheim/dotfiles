#!/usr/bin/env sh

# quit/restart bspwm
super + alt + {q,r}
  bspc {quit,wm -r}

# close and kill
super + {_,shift + }d
	bspc node -{c,k}

# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + y
	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
# super + f ; s ; {a,s,d,f}
	bspc node -t {tiled,pseudo_tiled,\~floating,\~fullscreen}

# alternate between the tiled and monocle layout
# super + m
super + shift + z
	bspc desktop -l next

# set the node flags
super + ctrl + {x,y,z}
	bspc node -g {locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
# super + {_,shift + }{h,j,k,l}
# 	bspc node -{f,s} {west,south,north,east}


super + {_,shift + }{h,j,k,l}
  LAYOUT=$(bspc query -T -d | jq -r .layout); \
  [[ "$LAYOUT" == "tiled" ]] && bspc node -{f,s} {west,south,north,east}; \
  [[ "$LAYOUT" == "monocle" ]] && bspc node -{f,s} {prev,next,prev,next}


# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
#super + {_,shift + }c
super + alt + shift + {h,l}
	bspc node -f {prev,next}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last (node/)desktop/monitor
super + {Tab, n}
	bspc {desktop,monitor} -f last

# move the focused node to the other monitor
super + shift {Tab, n}
	id=$(bspc query --nodes --node); bspc node --to-{desktop,monitor} last; bspc {desktop,monitor} -f last; bspc node --focus ${id}

# Set splitting ratio of windows
# super + ctrl + {1-9}
# 	bspc window -r 0.{1-9}

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,alt + }{1-3,q,w,e,4,a,s,7,8}
	bspc {desktop -f,node -d} '^{1-9,10,11}'

# move focused window to the next workspace and then switch to that workspace
alt + shift + {Left,Right}
  id=$(bspc query --nodes --node); bspc node --to-desktop {prev,next}; bspc desktop --focus next; bspc node --focus ${id}

# focus the node that demands attention
super + u
  bspc node --focus $(bspc query -N -n .urgent)

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -200 0,bottom 0 200,top 0 -200,right 200 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -200 0,top 0 200,bottom 0 -200,left 200 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-30 0,0 30,0 -30,30 0}

# Change window gap
super + {minus,equal}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 10 ))

super + grave
  bspwm-scratchterm-toggle

super + alt + shift + n
  bspc node @/ -R 90

# Move current window to a pre-selected space
super + shift + m
    bspc node -n last.!automatic

# Rotate tree
super + shift + {u,i}
    bspc node @/ -C {forward,backward}
