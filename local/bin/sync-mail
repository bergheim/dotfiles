#!/bin/bash

# based on mutt-wiz

MAIL_DIR=~/.mail
MAIL_SYNC_FILE="$MAIL_DIR/.lastsync"

# todo < /dev/null this
if [ -z "$1" ]; then
    parallel "mbsync {}" ::: "glvortex-inbox" "gmail-inbox" "neptune-inbox"
else
    parallel "mbsync {}" ::: "glvortex" "gmail" "neptune"
fi

# something like this would work if we could index mu behind the scenes. but if
# we do that, we will still update mu4e which is a bit annoying..
# LAST_SYNC=$(date -u -r ${MAIL_SYNC_FILE} +"%Y-%m-%dT%H:%M:%S%Z")
# NEW_MAILS_COUNT=$(mu find "(maildir:/Inbox/ OR maildir:/Trash/ OR maildir:/Archive/ OR maildir:/Sent/) AND (date:${LAST_SYNC}..now)" 2>/dev/null | wc -l)

NEW_MAILS=$(find ${MAIL_DIR}/*/{Inbox,Sent,Archive,Trash,Drafts}/new/ -type f -newer ${MAIL_SYNC_FILE})
NEW_MAILS_COUNT=$(echo "$NEW_MAILS" | sed '/^\s*$/d' | wc -l)

echo "Num new mails ${NEW_MAILS_COUNT}"

if [ "$NEW_MAILS_COUNT" -gt "0" ]; then
    /usr/bin/emacsclient -e '(mu4e-update-index)' 2> /dev/null
    if [ "$NEW_MAILS_COUNT" -gt "1" ]; then
        notify-send --icon=emblem-documents --category email --app-name=mbsync "You've got mail" "You have $NEW_MAILS_COUNT new emails" &
    fi
    for file in $NEW_MAILS; do
        # Extract subject and sender from mail.
        from=$(awk '/^From: / && ++n ==1,/^\<.*\>:/' "$file" | perl -CS -MEncode -ne 'print decode("MIME-Header", $_)' | awk '{ $1=""; if (NF>=3)$NF=""; print $0 }' | sed 's/^[[:blank:]]*[\"'\''\<]*//;s/[\"'\''\>]*[[:blank:]]*$//')
        subject=$(awk '/^Subject: / && ++n == 1,/^\<.*\>: / && ++i == 2' "$file" | head -n 1 | perl -CS -MEncode -ne 'print decode("MIME-Header", $_)' | sed 's/^Subject: //' | sed 's/^{[[:blank:]]*[\"'\''\<]*//;s/[\"'\''\>]*[[:blank:]]*$//' | tr -d '\n')
        notify-send --icon=mail-unread --category email --app-name=mbsync "$from" "$subject"
    done

fi

wait

touch $MAIL_SYNC_FILE
